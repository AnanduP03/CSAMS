version: '3'

services:
  db:
    container_name: csams-postgres
    restart: always
    image: postgres:13-alpine
    environment:
      - POSTGRES_DB=postgres
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_HOST=db
    networks:
      - core
    ports:
      - 5432:5432
    volumes:
      - ./backend/dump.sql:/docker-entrypoint-initdb.d/dump.sql
  backend:
    container_name: csams-backend
    build:
      context: backend
      dockerfile: Dockerfile
    volumes:
      - ./backend:/app/backend
      - /var/run/docker.sock:/var/run/docker.sock
      - static:/app/backend/static
    ports:
      - 8000:8000
    networks:
      - core
    links:
      - db:db
  frontend:
    container_name: csams-frontend
    build:
      context: frontend
      dockerfile: Dockerfile
    ports:
      - 3000:3000
    networks:
      - core
    volumes:
      - ./frontend:/frontend
      - /var/run/docker.sock:/var/run/docker.sock
    command:
      "yarn run dev"
  nginx:
    container_name: csams-nginx
    image: nginx
    build:
      context: nginx
      dockerfile: Dockerfile
    links: 
      - backend
      - frontend
    ports:
      - 80:80
    volumes:
      - static:/app/backend/static
    networks:
      - core
    command: [nginx-debug, '-g', 'daemon off;']
    
networks:
  core:

volumes:
  static: